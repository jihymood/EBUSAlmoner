package com.xpro.ebusalmoner.fragment;

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Message;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.Button;
import android.widget.CompoundButton;
import android.widget.CompoundButton.OnCheckedChangeListener;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RadioButton;
import android.widget.TextView;

import com.alibaba.fastjson.JSON;
import com.xpro.ebusalmoner.R;
import com.xpro.ebusalmoner.activity.BreakdownInfoActivity1;
import com.xpro.ebusalmoner.activity.BreakdownInfoActivity2;
import com.xpro.ebusalmoner.activity.HistoryActivity;
import com.xpro.ebusalmoner.adapter.RouteAdapter;
import com.xpro.ebusalmoner.adapter.RouteAdapter2;
import com.xpro.ebusalmoner.baseapi.BaseFragment;
import com.xpro.ebusalmoner.baseapi.BaseHandler;
import com.xpro.ebusalmoner.constants.Constants;
import com.xpro.ebusalmoner.logic.TaskLogic;
import com.xpro.ebusalmoner.test.BreakdownData_M;
import com.xpro.ebusalmoner.test.BreakdownRoot_M;
import com.xpro.ebusalmoner.utils.ToastUtils;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * 管理人员-->监控/故障
 *
 * @author huangjh
 */
@SuppressLint("InflateParams")
public class MonitorFragment extends BaseFragment implements OnClickListener,
        OnCheckedChangeListener, OnItemClickListener {
    private static final String TAG = "MonitorFragment";
    private static final int REFRESH_COMPLETE = 0X110;
    private View view;
    private RouteAdapter adapter1;
    private RouteAdapter2 adapter2;
    private List<BreakdownData_M> data;
    private List<BreakdownData_M> data1;// 待完成
    private List<BreakdownData_M> data2;// 已完成
    private ListView listView;
    private Button set;
    private TextView textView, timeText;
    private RadioButton driverRadio, lineRadio;// 待分配
    private Myhandler handler;
    private TaskLogic logic;
    private LinearLayout blankLinear;
    private SimpleDateFormat sdf;

    private String json = "{\"success\": \"true\", "
            + "\"body\": {\"data\":[{\"id\": \"100\", "
            + "\"plateNumber\": \"1号拖车\",\"hitchLatitude\": "
            + "\"31.9813440513\", \"hitchLongitude\": \"118.7626883184\", "
            + "\"driverName\": \"科比\", \"driverTel\": \"18769029715\", "
            + "\"line\": \"108路\",\"hitchTime\": \"2013.02.12\",\"number\": \"JN-0039\"},"
            + "{\"id\": \"100\", "
            + "\"plateNumber\": \"1号拖车\",\"hitchLatitude\": "
            + "\"31.9813440513\", \"hitchLongitude\": \"118.7626883184\", "
            + "\"driverName\": \"科比\", \"driverTel\": \"18769029715\", "
            + "\"line\": \"108路\",\"hitchTime\": \"2013.02.12\",\"number\": \"JN-0039\"},"
            + "{\"id\": \"100\", "
            + "\"plateNumber\": \"1号拖车\",\"hitchLatitude\": "
            + "\"31.9813440513\", \"hitchLongitude\": \"118.7626883184\", "
            + "\"driverName\": \"科比\", \"driverTel\": \"18769029715\", "
            + "\"line\": \"108路\",\"hitchTime\": \"2013.02.12\",\"number\": \"JN-0039\"},{\"id\": \"100\", "
            + "\"plateNumber\": \"1号拖车\",\"hitchLatitude\": "
            + "\"31.9813440513\", \"hitchLongitude\": \"118.7626883184\", "
            + "\"driverName\": \"科比\", \"driverTel\": \"18769029715\", "
            + "\"line\": \"108路\",\"hitchTime\": \"2013.02.12\",\"number\": \"JN-0039\"}]}, \"errorCode\": \"-1\",\"msg\": \"成功\"}";

    private String json1 = "{\"success\": \"true\", "
            + "\"body\": {\"data\":[]}, \"errorCode\": \"-1\",\"msg\": \"成功\"}";

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        view = inflater.inflate(R.layout.fragment_monitor, null);

        initView();
//        handler = new Myhandler(getActivity());
//        logic = new TaskLogic(handler, getActivity());
//        logic.faultInformation();// 待分配
//        logic.faultInformation2();//已分配

        getData();

        return view;
    }

//    @Override
//    public void onResume() {
//        // TODO Auto-generated method stub
//        super.onResume();
//        if (lineRadio.isSelected()) {
//            getData2();
//        } else {
//            getData1();
//        }
//    }

    public void initView() {
        listView = (ListView) view.findViewById(R.id.listView);
        textView = (TextView) view.findViewById(R.id.textView);
        timeText = (TextView) view.findViewById(R.id.timeText);
        set = (Button) view.findViewById(R.id.set);
        driverRadio = (RadioButton) view.findViewById(R.id.driverRadio);
        lineRadio = (RadioButton) view.findViewById(R.id.lineRadio);
        blankLinear = (LinearLayout) view.findViewById(R.id.blankLinear);

        set.setOnClickListener(this);
        driverRadio.setOnCheckedChangeListener(this);
        lineRadio.setOnCheckedChangeListener(this);
        listView.setOnItemClickListener(this);

        data = new ArrayList<BreakdownData_M>();
        data1 = new ArrayList<BreakdownData_M>();
        data2 = new ArrayList<BreakdownData_M>();
    }

    @SuppressLint("SimpleDateFormat")
    public void getTodayDate() {
        sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");
        Date date = new Date();
        String dateStr = sdf.format(date);
        timeText.setText(dateStr);
    }

    @Override
    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
        // TODO Auto-generated method stub
        if (isChecked) {
            if (R.id.driverRadio == buttonView.getId()) {
//                getData1();
            } else {
//                getData2();
                getData();
            }
        }
    }

    public void getData() {
        BreakdownRoot_M root0 = JSON.parseObject(json, BreakdownRoot_M.class);
        List<BreakdownData_M> dataList = root0.getBody().getData();
        if (dataList != null && dataList.size() > 0) {
            data1 = dataList;
            adapter1 = new RouteAdapter(getActivity(), data1);
            listView.setAdapter(adapter1);
        } else { // 显示空白页
            data1 = dataList;
            listView.setVisibility(View.GONE);
            blankLinear.setVisibility(View.VISIBLE);
        }
    }

    private void getData2() {
        // TODO Auto-generated method stub
        logic.faultInformation2();//已分配
        data.clear();
        data.addAll(data2);// 已分配,暂时先用待分配数据和接口,当data1获取成功但是没有数据时（即空白页），这里会报空指针
        adapter2 = new RouteAdapter2(getActivity(), data);
        listView.setAdapter(adapter2);
        adapter2.notifyDataSetChanged();

        listView.setOnItemClickListener(new OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view,
                                    int position, long id) {
                // TODO Auto-generated method stub
                BreakdownData_M subData = data.get(position);
                Bundle bundle = new Bundle();
                Intent intent = new Intent(getActivity(),
                        BreakdownInfoActivity2.class);
                bundle.putParcelable("BreakdownData_M", subData);
                intent.putExtra("bundle", bundle);
                startActivity(intent);
            }
        });
    }

    private void getData1() {
        // TODO Auto-generated method stub
        data.clear();
        data.addAll(data1);// 待分配
        adapter1 = new RouteAdapter(getActivity(), data);
        listView.setAdapter(adapter1);
        adapter1.notifyDataSetChanged();

        listView.setOnItemClickListener(new OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view,
                                    int position, long id) {
                // TODO Auto-generated method stub
                BreakdownData_M breakdown = data.get(position);
                Intent intent = new Intent(getActivity(),
                        BreakdownInfoActivity1.class);
                String line = breakdown.getLine();
                String name = breakdown.getDriverName();
                String number = breakdown.getNumber();
                String tel = breakdown.getDriverTel();
                String time = breakdown.getHitchTime();
                String lat = breakdown.getHitchLatitude();
                String lng = breakdown.getHitchLongitude();
                intent.putExtra("line", line);
                intent.putExtra("name", name);
                intent.putExtra("tel", tel);
                intent.putExtra("time", time);
                intent.putExtra("lat", lat);
                intent.putExtra("lng", lng);
                intent.putExtra("number", number);

                startActivity(intent);
            }
        });
    }

    @Override
    public void onClick(View v) {
        // TODO Auto-generated method stub
        switch (v.getId()) {
            case R.id.set:// 历史任务
                startActivity(new Intent(getActivity(), HistoryActivity.class));
                break;
            default:
                break;
        }
    }

    @Override
    public void onItemClick(AdapterView<?> parent, View view, int position,
                            long id) {
        // TODO Auto-generated method stub
        BreakdownData_M breakdown = data1.get(position);
        String line = breakdown.getLine();
        String name = breakdown.getDriverName();
        String number = breakdown.getNumber();
        String tel = breakdown.getDriverTel();
        String time = breakdown.getHitchTime();
        String lat = breakdown.getHitchLatitude();
        String lng = breakdown.getHitchLongitude();
        Intent intent = new Intent(getActivity(), BreakdownInfoActivity1.class);
        intent.putExtra("line", line);
        intent.putExtra("name", name);
        intent.putExtra("tel", tel);
        intent.putExtra("time", time);
        intent.putExtra("lat", lat);
        intent.putExtra("lng", lng);
        intent.putExtra("number", number);

        startActivity(intent);
    }

    /**
     * handler用于接收返回消息
     */
    class Myhandler extends BaseHandler {
        public Myhandler(Context context) {
            super(context);
            // TODO Auto-generated constructor stub
        }

        @SuppressWarnings("unchecked")
        @Override
        public void doHandle(Message msg) {
            super.doHandle(msg);
            switch (msg.what) {
                case Constants.manager_wait_allot_success:// 待分配成功
                    List<BreakdownData_M> dataList = (List<BreakdownData_M>) msg.obj;
                    if (dataList != null && dataList.size() > 0) {
                        data1 = dataList;
                        adapter1 = new RouteAdapter(getActivity(), data1);
                        listView.setAdapter(adapter1);
                    } else { // 显示空白页
                        data1 = dataList;
                        listView.setVisibility(View.GONE);
                        blankLinear.setVisibility(View.VISIBLE);
                    }
                    break;
                case Constants.manager_wait_allot_fail:// 待分配失败
                    listView.setVisibility(View.GONE);
                    blankLinear.setVisibility(View.VISIBLE);
                    ToastUtils.showToast(getActivity(), "" + msg.obj);
                    break;
                case Constants.manager_complete_allot_success:// 获得已分配数据成功
                    List<BreakdownData_M> dataList2 = (List<BreakdownData_M>) msg.obj;
                    if (dataList2 != null && dataList2.size() > 0) {
                        data2 = dataList2;
                        adapter2 = new RouteAdapter2(getActivity(), data2);
                        listView.setAdapter(adapter2);
                    } else { // 显示空白页
                        data2 = dataList2;
                        listView.setVisibility(View.GONE);
                        blankLinear.setVisibility(View.VISIBLE);
                    }
                    break;
                case Constants.manager_complete_fail:// 获得已分配数据失败
                    listView.setVisibility(View.GONE);
                    blankLinear.setVisibility(View.VISIBLE);
                    ToastUtils.showToast(getActivity(), "" + msg.obj);
                    break;

                default:
                    break;
            }
        }
    }

}
